USE Capstone;

-- Bảng Accounts
CREATE TABLE Accounts (
    AccountId INT IDENTITY(1,1) PRIMARY KEY,
    Email NVARCHAR(100) NOT NULL UNIQUE,
    PasswordHash NVARCHAR(255) NOT NULL,
    Role NVARCHAR(20) NOT NULL CHECK (Role IN ('Student','Teacher','Admin')),
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    UpdateAt DATETIME2 NULL
);

-- Bảng StudentProfile (1-1 với Accounts)
CREATE TABLE StudentProfile (
    StudentId INT PRIMARY KEY,
    FullName NVARCHAR(100) NOT NULL,
    AvatarURL NVARCHAR(100) NULL,
    IdUnique NVARCHAR(100) NOT NULL UNIQUE,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    UpdateAt DATETIME2 NULL,
    FOREIGN KEY (StudentId) REFERENCES Accounts(AccountId)
);

-- Bảng TeacherProfile (1-1 với Accounts)
CREATE TABLE TeacherProfile (
    TeacherId INT PRIMARY KEY,
    FullName NVARCHAR(100) NOT NULL,
    PhoneNumber NVARCHAR(100) NULL,
    AvatarURL NVARCHAR(100) NULL,
    IdUnique NVARCHAR(100) NOT NULL UNIQUE,
    OrganizationName NVARCHAR(100) NOT NULL,
    OrganizationAddress NVARCHAR(100) NULL,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    UpdateAt DATETIME2 NULL,
    FOREIGN KEY (TeacherId) REFERENCES Accounts(AccountId)
);

-- Bảng Groups
CREATE TABLE Groups (
    GroupId INT IDENTITY(1,1) PRIMARY KEY,
    TeacherId INT NOT NULL,
    GroupName NVARCHAR(100) NOT NULL,
    GroupDescription NVARCHAR(255) NULL,
    IdUnique NVARCHAR(100) NOT NULL UNIQUE,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (TeacherId) REFERENCES TeacherProfile(TeacherId)
);

-- Bảng Student_Group (N-M giữa StudentProfile và Groups)
CREATE TABLE Student_Group (
    SGId INT IDENTITY(1,1) PRIMARY KEY,
    StudentId INT NOT NULL,
    GroupId INT NOT NULL,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (StudentId) REFERENCES StudentProfile(StudentId),
    FOREIGN KEY (GroupId) REFERENCES Groups(GroupId)
);

-- Bảng Topics
CREATE TABLE Topics (
    TopicId INT IDENTITY(1,1) PRIMARY KEY,
    TopicName NVARCHAR(100) NOT NULL,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME()
);

-- Bảng QuizzFolders
CREATE TABLE QuizzFolders (
    FolderId INT IDENTITY(1,1) PRIMARY KEY,
    TeacherId INT,
    FolderName NVARCHAR(100) NOT NULL,
    ParentFolderId INT NULL,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    UpdateAt DATETIME2 NULL,
    FOREIGN KEY (ParentFolderId) REFERENCES QuizzFolders(FolderId),
    FOREIGN KEY (TeacherId) REFERENCES TeacherProfile(TeacherId)
);

-- Bảng Quizzes
CREATE TABLE Quizzes (
    QuizId INT IDENTITY(1,1) PRIMARY KEY,
    TeacherId INT NOT NULL,
    FolderId INT NOT NULL,
    TopicId INT NOT NULL,
    Title NVARCHAR(100) NOT NULL,
    Description NVARCHAR(MAX) NOT NULL,
    IsPrivate BIT NOT NULL,
    AvartarURL NVARCHAR(255),
    TotalParticipants INT NOT NULL DEFAULT 0,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    UpdateAt DATETIME2 NULL,
    FOREIGN KEY (TeacherId) REFERENCES TeacherProfile(TeacherId),
    FOREIGN KEY (FolderId) REFERENCES QuizzFolders(FolderId),
    FOREIGN KEY (TopicId) REFERENCES Topics(TopicId)
);

-- Bảng Quizz_Group (N-M giữa Quizzes và Groups)
CREATE TABLE Quizz_Group (
    QGId INT IDENTITY(1,1) PRIMARY KEY,
    QuizId INT NOT NULL,
    GroupId INT NOT NULL,
    Message NVARCHAR(MAX) NULL,
    ExpiredTime Datetime2  NOT NULL,
    Status NVARCHAR(10) NOT NULL DEFAULT 'Active' CHECK (Status IN ('Pending','Completed')),
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (QuizId) REFERENCES Quizzes(QuizId),
    FOREIGN KEY (GroupId) REFERENCES Groups(GroupId)
);

-- Bảng Questions
CREATE TABLE Questions (
    QuestionId INT IDENTITY(1,1) PRIMARY KEY,
    QuizId INT NOT NULL,
    QuestionType NVARCHAR(10) NOT NULL CHECK (QuestionType IN ('MCQ','TF')),
    QuestionContent NVARCHAR(MAX) NOT NULL,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    UpdateAt DATETIME2 NULL,
    Time INT NUll,
    IsDeleted BIT NOT NULL DEFAULT 0,
    FOREIGN KEY (QuizId) REFERENCES Quizzes(QuizId)
);

-- Bảng Options
CREATE TABLE Options (
    OptionId INT IDENTITY(1,1) PRIMARY KEY,
    QuestionId INT NOT NULL,
    OptionContent NVARCHAR(MAX) NOT NULL,
    IsCorrect BIT NOT NULL,
    IsDeleted BIT NOT NULL DEFAULT 0,
    FOREIGN KEY (QuestionId) REFERENCES Questions(QuestionId)
);

CREATE TABLE OfflineResults (
    OffResultId INT IDENTITY(1,1) PRIMARY KEY,
    QGId INT NULL,
    GroupId INT NULL,
    StudentId INT NOT NULL,
    QuizId INT NOT NULL,
    CorrecCount INT NOT NULL,
    WrongCount INT NOT NULL,
    TotalQuestion INT NOT NULL,
    StartDate DATETIME2 NOT NULL,
    EndDate DATETIME2 NOT NULL,
    Duration INT NOT NULL, -- Duration in minutes
    Score INT NOT NULL,
    RANK INT,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (StudentId) REFERENCES StudentProfile(StudentId),
    FOREIGN KEY (QuizId) REFERENCES Quizzes(QuizId),
    FOREIGN KEY (QGId) REFERENCES Quizz_Group(QGId)
);

-- Bảng OnlineResults
CREATE TABLE OnlineResults (
    OnlResultId INT IDENTITY(1,1) PRIMARY KEY,
    StudentName NVARCHAR(50) NOT NULL,
    OnlineReportId INT NOT NULL,
    QuizId INT NOT NULL,
    Score INT NOT NULL,
    CorrecCount INT,
    WrongCount INT,
    TotalQuestion INT,
    RANK INT,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (QuizId) REFERENCES Quizzes(QuizId)
);

-- Bảng QuizzFavourite
CREATE TABLE QuizzFavourite (
    FavouriteId INT IDENTITY(1,1) PRIMARY KEY,
    AccountID INT NOT NULL,
    QuizId INT NOT NULL,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
);

-- Bảng QuestionStats
CREATE TABLE QuestionStats (
    QuestionStatsId INT IDENTITY(1,1) PRIMARY KEY,
    QuizId INT,
    QuestionId INT,
    CorrecCount INT,
    WrongCount INT,
    TotalAnswer INT,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (QuizId) REFERENCES Quizzes(QuizId),
    FOREIGN KEY (QuestionId) REFERENCES Questions(QuestionId)
);

-- Bảng OfflineWrongAnswer (Missing table based on OfflineWrongAnswerModule.cs)
CREATE TABLE OfflineWrongAnswers (
    OffWrongId INT IDENTITY(1,1) PRIMARY KEY,
    OffResultId INT NOT NULL,
    QuestionId INT NOT NULL,
    SelectedOptionId NVARCHAR(MAX),
    CorrectOptionId NVARCHAR(MAX),
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (OffResultId) REFERENCES OfflineResults(OffResultId),
);

CREATE TABLE OfflineReports(
    OfflineReportId INT IDENTITY(1,1) PRIMARY KEY,
    QGId INT NOT NULL,
    QuizId INT NOT NULL,
    ReportName NVARCHAR(100) NOT NULL,
    HighestScore INT NOT NULL,
    LowestScore INT NOT NULL,
    AverageScore Decimal(5,2) NOT NULL,
    TotalParticipants INT NOT NULL,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (QGId) REFERENCES Quizz_Group(QGId),
);

CREATE TABLE OnlineReports(
    OnlineReportId INT IDENTITY(1,1) PRIMARY KEY,
    QuizId INT NOT NULL,
    TeacherId INT NOT NULL,
    ReportName NVARCHAR(100) NOT NULL,
    HighestScore INT NOT NULL,
    LowestScore INT NOT NULL,
    AverageScore Decimal(5,2) NOT NULL,
    TotalParticipants INT NOT NULL,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (QGId) REFERENCES Quizz_Group(QGId),    
);

CREATE TABLE OnlineWrongAnswer  (
    OnlWrongId INT IDENTITY(1,1) PRIMARY KEY,
    OnlResultId INT NOT NULL,
    QuestionId INT NOT NULL,
    SelectedOptionId NVARCHAR(MAX),
    CorrectOptionId NVARCHAR(MAX),
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (OnlResultId) REFERENCES OnlineResults(OnlResultId),
);

