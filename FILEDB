USE Capstone;

-- Bảng Accounts
CREATE TABLE Accounts (
    AccountId INT IDENTITY(1,1) PRIMARY KEY,
    Email NVARCHAR(100) NOT NULL UNIQUE,
    PasswordHash NVARCHAR(255) NOT NULL,
    Role NVARCHAR(20) NOT NULL CHECK (Role IN ('Student','Teacher','Admin')),
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    UpdateAt DATETIME2 NULL
);

-- Bảng StudentProfile (1-1 với Accounts)
CREATE TABLE StudentProfile (
    StudentId INT PRIMARY KEY,
    FullName NVARCHAR(100) NOT NULL,
    AvatarURL NVARCHAR(100) NULL,
    IdUnique NVARCHAR(100) NOT NULL UNIQUE,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    UpdateAt DATETIME2 NULL,
    FOREIGN KEY (StudentId) REFERENCES Accounts(AccountId)
);

-- Bảng TeacherProfile (1-1 với Accounts)
CREATE TABLE TeacherProfile (
    TeacherId INT PRIMARY KEY,
    FullName NVARCHAR(100) NOT NULL,
    PhoneNumber NVARCHAR(100) NULL,
    AvatarURL NVARCHAR(100) NULL,
    IdUnique NVARCHAR(100) NOT NULL UNIQUE,
    OrganizationName NVARCHAR(100) NOT NULL,
    OrganizationAddress NVARCHAR(100) NULL,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    UpdateAt DATETIME2 NULL,
    FOREIGN KEY (TeacherId) REFERENCES Accounts(AccountId)
);

-- Bảng Groups
CREATE TABLE Groups (
    GroupId INT IDENTITY(1,1) PRIMARY KEY,
    TeacherId INT NOT NULL,
    GroupName NVARCHAR(100) NOT NULL,
    GroupDescription NVARCHAR(255) NULL,
    IdUnique NVARCHAR(100) NOT NULL UNIQUE,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (TeacherId) REFERENCES TeacherProfile(TeacherId)
);

-- Bảng Student_Group (N-M giữa StudentProfile và Groups)
CREATE TABLE Student_Group (
    SGId INT IDENTITY(1,1) PRIMARY KEY,
    StudentId INT NOT NULL,
    GroupId INT NOT NULL,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (StudentId) REFERENCES StudentProfile(StudentId),
    FOREIGN KEY (GroupId) REFERENCES Groups(GroupId)
);

-- Bảng Topics
CREATE TABLE Topics (
    TopicId INT IDENTITY(1,1) PRIMARY KEY,
    TopicName NVARCHAR(100) NOT NULL,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME()
);

-- Bảng QuizzFolders
CREATE TABLE QuizzFolders (
    FolderId INT IDENTITY(1,1) PRIMARY KEY,
    TeacherId INT,
    FolderName NVARCHAR(100) NOT NULL,
    ParentFolderId INT NULL,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    UpdateAt DATETIME2 NULL,
    FOREIGN KEY (ParentFolderId) REFERENCES QuizzFolders(FolderId),
    FOREIGN KEY (TeacherId) REFERENCES TeacherProfile(TeacherId)
);

-- Bảng Quizzes
CREATE TABLE Quizzes (
    QuizId INT IDENTITY(1,1) PRIMARY KEY,
    TeacherId INT NOT NULL,
    FolderId INT NOT NULL,
    TopicId INT NOT NULL,
    GroupId INT NULL,
    Title NVARCHAR(100) NOT NULL,
    Description NVARCHAR(MAX) NOT NULL,
    IsPrivate BIT NOT NULL,
    AvartarURL NVARChAR (255),
    NumberOfPlays int,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    UpdateAt DATETIME2 NULL,
    FOREIGN KEY (TeacherId) REFERENCES TeacherProfile(TeacherId),
    FOREIGN KEY (FolderId) REFERENCES QuizzFolders(FolderId),
    FOREIGN KEY (TopicId) REFERENCES Topics(TopicId),
    FOREIGN KEY (GroupId) REFERENCES Groups(GroupId)
);

-- Bảng Quizz_Group (N-M giữa Quizzes và Groups)
CREATE TABLE Quizz_Group (
    QGId INT IDENTITY(1,1) PRIMARY KEY,
    QuizId INT NOT NULL,
    GroupId INT NOT NULL,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (QuizId) REFERENCES Quizzes(QuizId),
    FOREIGN KEY (GroupId) REFERENCES Groups(GroupId)
);

-- Bảng Questions
CREATE TABLE Questions (
    QuestionId INT IDENTITY(1,1) PRIMARY KEY,
    QuizId INT NOT NULL,
    QuestionType NVARCHAR(10) NOT NULL CHECK (QuestionType IN ('MCQ','TF')),
    QuestionContent NVARCHAR(MAX) NOT NULL,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    UpdateAt DATETIME2 NULL,
    FOREIGN KEY (QuizId) REFERENCES Quizzes(QuizId)
);

-- Bảng Options
CREATE TABLE Options (
    OptionId INT IDENTITY(1,1) PRIMARY KEY,
    QuestionId INT NOT NULL,
    OptionContent NVARCHAR(MAX) NOT NULL,
    IsCorrect BIT NOT NULL,
    FOREIGN KEY (QuestionId) REFERENCES Questions(QuestionId)
);

-- Bảng Results
CREATE TABLE OfflineResults (
    OffResultId INT IDENTITY(1,1) PRIMARY KEY,
    StudentId INT NOT NULL,
    QuizId INT NOT NULL,
    Score INT NOT NULL,
    CorrecCount int,
    WrongCount int,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (StudentId) REFERENCES StudentProfile(StudentId),
    FOREIGN KEY (QuizId) REFERENCES Quizzes(QuizId)
);
CREATE TABLE OnlineResults (
    OnlResultId INT IDENTITY(1,1) PRIMARY KEY,
    StudentName NVARCHAR(50) NOT NULL,
    QuizId INT NOT NULL UNIQUE,
    Score INT NOT NULL,
    CorrecCount int,
    WrongCount int,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (QuizId) REFERENCES Quizzes(QuizId)
);
-- Bảng QuizzFavourite
CREATE TABLE QuizzFavourite (
    FavouriteId INT IDENTITY(1,1) PRIMARY KEY,
    StudentId INT NOT NULL,
    QuizId INT NOT NULL,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME()
);

CREATE TABLE QuestionStats (
    QuestionStatsId INT IDENTITY(1,1) PRIMARY KEY,
    QuizId INT UNIQUE,
    QuestionId INT,
    CorrecCount int,
    WrongCount int,
    Total int,
    CreateAt DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME()
);